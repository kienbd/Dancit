<div class="pull-left">
  <%= render partial: "player",locals: {video: @video} %>

  <div class="video-controller">
    <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
      <div class="panel panel-default">
        <div class="panel-heading" role="tab" id="headingOne">
          <h4 class="panel-title">
            <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
              Stages
            </a>
          </h4>
        </div>
        <div id="collapseOne" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingOne">
          <div class="panel-body">
            <div class="button" onclick="setloopBetween(0,5)">Stage 1 </div>
            <div class="button" onclick="setloopBetween(5,10)">Stage 2 </div>
            <div class="button" onclick="setloopBetween(10,15)">Stage 3 </div>
            <div class="button" onclick="setloopBetween(15,25)">Stage 4 </div>
            <div class="button" onclick="setloopBetween(25,46)">Stage 5 </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="row video-actions-holder">

    <div class="col-sm-12 col-md-8">
      <div class="video-info pull-left">
        <h2 style="display: inline-block;margin: 0px"> <%= @video.name %> </h2>
        <span> by </span>
        <%= link_to @video.owner.username, user_path(@video.owner) %>
      </div>
      <div class="inapp-action pull-left">
        <% if !current_user.voted_for? @video %>
          <a href=" <%=likes_path(video_id: @video.id) %>" data-method="post" data-remote="true" >
            <i class="glyphicon glyphicon-heart"></i>
          </a>
        <% end %>
          100
        <a href="#"> <i class="glyphicon glyphicon-eye-open"></i> </a>
        200
      </div>
    </div>

    <div class="social-actions col-sm-12 col-md-4 text-right">
      <a href="#"> <i class="fa fa-facebook-official"></i> </a>
      <a href="#"> <i class="fa fa-twitter-square"></i> </a>
    </div>
  </div>
  <p style="padding-left: 5px;">
    <%= @video.description %>
  </p>

  <hr/>
  <div class="comment-holder">
    <h2> Comments </h2>
    <%= form_tag comments_path,method: :post, remote: true do %>
      <%= hidden_field_tag :video_id,@video.id %>
      <div class="form-group col-md-8">
        <%= text_area_tag :comment,"",class: "form-control",rows: "2" %>
      </div>
      <div class="form-group">
        <button type="submit" class="btn btn-default">Comment</button>
      </div>
      <div class="clearfix"></div>
    <% end %>
    <div id="comment_holder">
      <ul style="list-style: none">
        <% @video.comments.each do |com| %>
          <%= render partial: "shared/comment",locals: {com: com} %>
        <% end %>
      </ul>
    </div>
  </div>
</div>
<div class="clearfix"></div>

<script>
  //Example of options ={hidden:false,locked:true,panel:false}
  mplayer =videojs("vid1",{
    controls: true,
    inactivityTimeout: 0,
    controlBar: {
      muteToggle: false,
    },
    playbackRates: [0.5, 1, 1.5, 2]

  },function() {


  });
  mplayer.markers({
    onMarkerReached: function(marker){
    },
    markerStyle: {
      'width':'10px',
      'background-color': 'red'
    },
    markerTip:{
      display: true,
      text: function(marker) {
        return "This is a break: " + marker.text;
      }
    },
    breakOverlay:{
      display: true,
      text: function(marker) {
        return marker.text;
      }
    },
    markers: [
      {time: 0,   text: "Stage 1"},
      {time: 5,   text: "Stage 2"},
      {time: 10,  text: "Stage 3"},
      {time: 15,  text: "Stage 4"},
      {time: 25,  text: "Stage 5"},
      {time: 46,  text: "End"}
    ]
  });
  videojs("vid1").ready(function(){
    this.cuepoints();
    $(".vjs-load-progress").on('click',function() {
      removeLoop();
    })
    $(".vjs-playback-rate").removeClass("vjs-hidden");
    $(".vjs-progress-holder").mousedown(function() {
      time = mplayer.currentTime();
      console.log(time);
      if(mplayer.start_loop >= 0 && mplayer.stop_loop >= 0) {
        if(time < mplayer.start_loop || time > mplayer.stop_loop) {
          removeLoop();
        }
      }
    })
  });
  function setloopBetween(start,end) {
    removeLoop();
    mplayer.start_loop = start;
    mplayer.stop_loop = end;
    mplayer.addCuepoint({
        namespace: "logger",
        start: start,
        end: end,
        onStart: function(params){
            if(params.error){
                console.error("Error at second 0");
            }else{
                console.log("Log at second 0");
            }
        },
        onEnd: function(params){
          mplayer.currentTime(start);
          mplayer.play();
        },
        params: {error: false}
    });
    mplayer.currentTime(start);
    mplayer.play();
  }
  function removeLoop() {
    mplayer.destroyCuepoints();
    mplayer.cuepoints();
    mplayer.start_loop = -1;
    mplayer.stop_loop = -1;
    console.log("loop removed");
  }
</script>


